require 'openssl'
require 'socket'
require 'uri'

class HTTPS_Req

HOST = "localhost"
HTTP_PORT = 2017
HTTPS_PORT = 443

  def initialize()
    puts "HTTPS module initialized"
  end
  
  def retrieve_page(client_s, uri, verb, version)
		puts "SSL page retrieved!"

		server_s = TCPSocket.new(uri.host, (uri.port.nil? ? HTTP_PORT : uri.port))
		puts '1'
		ssl_context = ssl_context = OpenSSL::SSL::SSLContext.new
		puts '2'
		#ssl_context.cert = OpenSSL::X509::Certificate.new(File.open("server.crt"))
		puts '3'
		#ssl_context.key = OpenSSL::PKey::RSA.new(File.open("server.key"))
		puts '4'
		ssl_context.ssl_version = :SSLv23
		puts '5'
		ssl_socket = OpenSSL::SSL::SSLSocket.new(server_s, ssl_context)
		puts '6'
		ssl_socket.connect(uri)
		puts '7'
		
		puts uri
		puts verb
		puts version
		
		#puts "#{verb} #{uri.path}?#{uri.query} HTTP/#{version}\r\n"
		#ssl_socket.puts("\n\n#{verb} #{uri.path}?#{uri.query} HTTP/#{version}\r\n")
		#client_s.write(ssl_socket.gets)		
  end
end
